{"_id":{"$oid":"5817a7a1b729347bfa533a11"},"name":"Optimisation","subcategories":[{"name":"proper tail calls (tail call optimisation)","features":[{"index":1,"name":"direct recursion"},{"index":2,"name":"mutual recursion"}]}]}
{"_id":{"$oid":"5817a7a1b729347bfa533a14"},"name":"Functions","subcategories":[{"name":"arrow functions","features":[{"index":161,"name":"0 parameters"},{"index":162,"name":"1 parameter, no brackets"},{"index":163,"name":"multiple parameters"},{"index":164,"name":"lexical \"this\" binding"},{"index":165,"name":"\"this\" unchanged by call or apply"},{"index":166,"name":"can't be bound, can be curried"},{"index":167,"name":"lexical \"arguments\" binding"},{"index":168,"name":"no line break between params and =\u003e"},{"index":169,"name":"correct precedence"},{"index":170,"name":"no \"prototype\" property"},{"index":171,"name":"lexical \"super\" binding in constructors"},{"index":172,"name":"lexical \"super\" binding in methods"},{"index":173,"name":"lexical \"new.target\" binding"}]},{"name":"class","features":[{"index":174,"name":"class statement"},{"index":175,"name":"is block-scoped"},{"index":176,"name":"class expression"},{"index":177,"name":"anonymous class"},{"index":178,"name":"constructor"},{"index":179,"name":"prototype methods"},{"index":180,"name":"string-keyed methods"},{"index":181,"name":"computed prototype methods"},{"index":182,"name":"optional semicolons"},{"index":183,"name":"static methods"},{"index":184,"name":"computed static methods"},{"index":185,"name":"accessor properties"},{"index":186,"name":"computed accessor properties"},{"index":187,"name":"static accessor properties"},{"index":188,"name":"computed static accessor properties"},{"index":189,"name":"class name is lexically scoped"},{"index":190,"name":"computed names, temporal dead zone"},{"index":191,"name":"methods aren't enumerable"},{"index":192,"name":"implicit strict mode"},{"index":193,"name":"constructor requires new"},{"index":194,"name":"extends"},{"index":195,"name":"extends expressions"},{"index":196,"name":"extends null"},{"index":197,"name":"new.target"}]},{"name":"super","features":[{"index":198,"name":"statement in constructors"},{"index":199,"name":"expression in constructors"},{"index":200,"name":"in methods, property access"},{"index":201,"name":"in methods, method calls"},{"index":202,"name":"method calls use correct \"this\" binding"},{"index":203,"name":"constructor calls use correct \"new.target\" binding"},{"index":204,"name":"is statically bound"},{"index":205,"name":"super() invokes the correct constructor"}]},{"name":"generators","features":[{"index":206,"name":"basic functionality"},{"index":207,"name":"generator function expressions"},{"index":208,"name":"correct \"this\" binding"},{"index":209,"name":"can't use \"this\" with new"},{"index":210,"name":"sending"},{"index":211,"name":"%GeneratorPrototype%"},{"index":212,"name":"%GeneratorPrototype% prototype chain"},{"index":213,"name":"%GeneratorPrototype%.constructor"},{"index":214,"name":"%GeneratorPrototype%.throw"},{"index":215,"name":"%GeneratorPrototype%.return"},{"index":216,"name":"yield operator precedence"},{"index":217,"name":"yield *, arrays"},{"index":218,"name":"yield *, sparse arrays"},{"index":219,"name":"yield *, strings"},{"index":220,"name":"yield *, astral plane strings"},{"index":221,"name":"yield *, generator instances"},{"index":222,"name":"yield *, generic iterables"},{"index":223,"name":"yield *, instances of iterables"},{"index":224,"name":"yield * on non-iterables is a runtime error"},{"index":225,"name":"yield *, iterator closing"},{"index":226,"name":"yield *, iterator closing via throw()"},{"index":227,"name":"shorthand generator methods"},{"index":228,"name":"string-keyed shorthand generator methods"},{"index":229,"name":"computed shorthand generators"},{"index":230,"name":"shorthand generator methods, classes"},{"index":231,"name":"computed shorthand generators, classes"},{"index":232,"name":"shorthand generators can't be constructors"}]}]}
{"_id":{"$oid":"5817a7a1b729347bfa533a13"},"name":"Bindings","subcategories":[{"name":"const","features":[{"index":132,"name":"basic support"},{"index":133,"name":"is block-scoped"},{"index":134,"name":"cannot be in statements"},{"index":135,"name":"redefining a const is an error"},{"index":136,"name":"for loop statement scope"},{"index":137,"name":"for-in loop iteration scope"},{"index":138,"name":"for-of loop iteration scope"},{"index":139,"name":"temporal dead zone"},{"index":140,"name":"basic support (strict mode)"},{"index":141,"name":"is block-scoped (strict mode)"},{"index":142,"name":"cannot be in statements (strict mode)"},{"index":143,"name":"redefining a const (strict mode)"},{"index":144,"name":"for loop statement scope (strict mode)"},{"index":145,"name":"for-in loop iteration scope (strict mode)"},{"index":146,"name":"for-of loop iteration scope (strict mode)"},{"index":147,"name":"temporal dead zone (strict mode)"}]},{"name":"let","features":[{"index":148,"name":"basic support"},{"index":149,"name":"is block-scoped"},{"index":150,"name":"cannot be in statements"},{"index":151,"name":"for loop statement scope"},{"index":152,"name":"temporal dead zone"},{"index":153,"name":"for/for-in loop iteration scope"},{"index":154,"name":"basic support (strict mode)"},{"index":155,"name":"is block-scoped (strict mode)"},{"index":156,"name":"cannot be in statements (strict mode)"},{"index":157,"name":"for loop statement scope (strict mode)"},{"index":158,"name":"temporal dead zone (strict mode)"},{"index":159,"name":"for/for-in loop iteration scope (strict mode)"},{"index":160,"name":"block-level function declaration[13]"}]}]}
{"_id":{"$oid":"5817a7a1b729347bfa533a12"},"name":"Syntax","subcategories":[{"name":"default function parameters","features":[{"index":3,"name":"basic functionality"},{"index":4,"name":"explicit undefined defers to the default"},{"index":5,"name":"defaults can refer to previous params"},{"index":6,"name":"arguments object interaction"},{"index":7,"name":"temporal dead zone"},{"index":8,"name":"separate scope"},{"index":9,"name":"new Function() support"}]},{"name":"rest parameters","features":[{"index":10,"name":"basic functionality"},{"index":11,"name":"function 'length' property"},{"index":12,"name":"arguments object interaction"},{"index":13,"name":"can't be used in setters"},{"index":14,"name":"new Function() support"}]},{"name":"spread (...) operator","features":[{"index":15,"name":"with arrays, in function calls"},{"index":16,"name":"with arrays, in array literals"},{"index":17,"name":"with sparse arrays, in function calls"},{"index":18,"name":"with sparse arrays, in array literals"},{"index":19,"name":"with strings, in function calls"},{"index":20,"name":"with strings, in array literals"},{"index":21,"name":"with astral plane strings, in function calls"},{"index":22,"name":"with astral plane strings, in array literals"},{"index":23,"name":"with generator instances, in calls"},{"index":24,"name":"with generator instances, in arrays"},{"index":25,"name":"with generic iterables, in calls"},{"index":26,"name":"with generic iterables, in arrays"},{"index":27,"name":"with instances of iterables, in calls"},{"index":28,"name":"with instances of iterables, in arrays"},{"index":29,"name":"spreading non-iterables is a runtime error"}]},{"name":"object literal extensions","features":[{"index":30,"name":"computed properties"},{"index":31,"name":"shorthand properties"},{"index":32,"name":"shorthand methods"},{"index":33,"name":"string-keyed shorthand methods"},{"index":34,"name":"computed shorthand methods"},{"index":35,"name":"computed accessors"}]},{"name":"for..of loops","features":[{"index":36,"name":"with arrays"},{"index":37,"name":"with sparse arrays"},{"index":38,"name":"with strings"},{"index":39,"name":"with astral plane strings"},{"index":40,"name":"with generator instances"},{"index":41,"name":"with generic iterables"},{"index":42,"name":"with instances of generic iterables"},{"index":43,"name":"iterator closing, break"},{"index":44,"name":"iterator closing, throw"}]},{"name":"octal and binary literals","features":[{"index":45,"name":"octal literals"},{"index":46,"name":"binary literals"},{"index":47,"name":"octal supported by Number()"},{"index":48,"name":"binary supported by Number()"}]},{"name":"template literals","features":[{"index":49,"name":"basic functionality"},{"index":50,"name":"toString conversion"},{"index":51,"name":"tagged template literals"},{"index":52,"name":"passed array is frozen"},{"index":53,"name":"line break normalisation"}]},{"name":"RegExp \"y\" and \"u\" flags","features":[{"index":54,"name":"\"y\" flag"},{"index":55,"name":"\"y\" flag, lastIndex"},{"index":56,"name":"\"u\" flag"},{"index":57,"name":"\"u\" flag, Unicode code point escapes"},{"index":58,"name":"\"u\" flag, case folding"}]},{"name":"destructuring, declarations","features":[{"index":59,"name":"with arrays"},{"index":60,"name":"with sparse arrays"},{"index":61,"name":"with strings"},{"index":62,"name":"with astral plane strings"},{"index":63,"name":"with generator instances"},{"index":64,"name":"with generic iterables"},{"index":65,"name":"with instances of generic iterables"},{"index":66,"name":"iterator closing"},{"index":67,"name":"trailing commas in iterable patterns"},{"index":68,"name":"with objects"},{"index":69,"name":"object destructuring with primitives"},{"index":70,"name":"trailing commas in object patterns"},{"index":71,"name":"throws on null and undefined"},{"index":72,"name":"computed properties"},{"index":73,"name":"multiples in a single var statement"},{"index":74,"name":"nested"},{"index":75,"name":"in for-in loop heads"},{"index":76,"name":"in for-of loop heads"},{"index":77,"name":"in catch heads"},{"index":78,"name":"rest"},{"index":79,"name":"defaults"},{"index":80,"name":"defaults, let temporal dead zone"}]},{"name":"destructuring, assignment","features":[{"index":81,"name":"with arrays"},{"index":82,"name":"with sparse arrays"},{"index":83,"name":"with strings"},{"index":84,"name":"with astral plane strings"},{"index":85,"name":"with generator instances"},{"index":86,"name":"with generic iterables"},{"index":87,"name":"with instances of generic iterables"},{"index":88,"name":"iterator closing"},{"index":89,"name":"iterable destructuring expression"},{"index":90,"name":"chained iterable destructuring"},{"index":91,"name":"trailing commas in iterable patterns"},{"index":92,"name":"with objects"},{"index":93,"name":"object destructuring with primitives"},{"index":94,"name":"trailing commas in object patterns"},{"index":95,"name":"object destructuring expression"},{"index":96,"name":"parenthesised left-hand-side is a syntax error"},{"index":97,"name":"chained object destructuring"},{"index":98,"name":"throws on null and undefined"},{"index":99,"name":"computed properties"},{"index":100,"name":"nested"},{"index":101,"name":"rest"},{"index":102,"name":"nested rest"},{"index":103,"name":"empty patterns"},{"index":104,"name":"defaults"}]},{"name":"destructuring, parameters","features":[{"index":105,"name":"with arrays"},{"index":106,"name":"with sparse arrays"},{"index":107,"name":"with strings"},{"index":108,"name":"with astral plane strings"},{"index":109,"name":"with generator instances"},{"index":110,"name":"with generic iterables"},{"index":111,"name":"with instances of generic iterables"},{"index":112,"name":"iterator closing"},{"index":113,"name":"trailing commas in iterable patterns"},{"index":114,"name":"with objects"},{"index":115,"name":"object destructuring with primitives"},{"index":116,"name":"trailing commas in object patterns"},{"index":117,"name":"throws on null and undefined"},{"index":118,"name":"computed properties"},{"index":119,"name":"nested"},{"index":120,"name":"arguments' interaction"},{"index":121,"name":"new Function() support"},{"index":122,"name":"in parameters, function 'length' property"},{"index":123,"name":"rest"},{"index":124,"name":"empty patterns"},{"index":125,"name":"defaults"},{"index":126,"name":"defaults, separate scope"},{"index":127,"name":"defaults, new Function() support"}]},{"name":"Unicode code point escapes","features":[{"index":128,"name":"in strings"},{"index":129,"name":"in identifiers"}]},{"name":"new.target","features":[{"index":130,"name":"in constructors"},{"index":131,"name":"assignment is an early error"}]}]}
{"_id":{"$oid":"5817a7a1b729347bfa533a17"},"name":"Subclassing","subcategories":[{"name":"Array is subclassable","features":[{"index":525,"name":"length property (accessing)"},{"index":526,"name":"length property (setting)"},{"index":527,"name":"correct prototype chain"},{"index":528,"name":"Array.isArray support"},{"index":529,"name":"Array.prototype.concat"},{"index":530,"name":"Array.prototype.filter"},{"index":531,"name":"Array.prototype.map"},{"index":532,"name":"Array.prototype.slice"},{"index":533,"name":"Array.prototype.splice"},{"index":534,"name":"Array.from"},{"index":535,"name":"Array.of"}]},{"name":"RegExp is subclassable","features":[{"index":536,"name":"basic functionality"},{"index":537,"name":"correct prototype chain"},{"index":538,"name":"RegExp.prototype.exec"},{"index":539,"name":"RegExp.prototype.test"}]},{"name":"Function is subclassable","features":[{"index":540,"name":"can be called"},{"index":541,"name":"correct prototype chain"},{"index":542,"name":"can be used with \"new\""},{"index":543,"name":"Function.prototype.call"},{"index":544,"name":"Function.prototype.apply"},{"index":545,"name":"Function.prototype.bind"}]},{"name":"Promise is subclassable","features":[{"index":546,"name":"basic functionality"},{"index":547,"name":"correct prototype chain"},{"index":548,"name":"Promise.all"},{"index":549,"name":"Promise.race"}]},{"name":"miscellaneous subclassables","features":[{"index":550,"name":"Boolean is subclassable"},{"index":551,"name":"Number is subclassable"},{"index":552,"name":"String is subclassable"},{"index":553,"name":"Error is subclassable"},{"index":554,"name":"Map is subclassable"},{"index":555,"name":"Set is subclassable"}]}]}
{"_id":{"$oid":"5817a7a1b729347bfa533a16"},"name":"Built-in extensions","subcategories":[{"name":"Object static methods","features":[{"index":440,"name":"Object.assign"},{"index":441,"name":"Object.is"},{"index":442,"name":"Object.getOwnPropertySymbols"},{"index":443,"name":"Object.setPrototypeOf"}]},{"name":"function \"name\" property","features":[{"index":444,"name":"function statements"},{"index":445,"name":"function expressions"},{"index":446,"name":"new Function"},{"index":447,"name":"bound functions"},{"index":448,"name":"variables (function)"},{"index":449,"name":"object methods (function)"},{"index":450,"name":"accessor properties"},{"index":451,"name":"shorthand methods"},{"index":452,"name":"shorthand methods (no lexical binding)"},{"index":453,"name":"symbol-keyed methods"},{"index":454,"name":"class statements"},{"index":455,"name":"class expressions"},{"index":456,"name":"variables (class)"},{"index":457,"name":"object methods (class)"},{"index":458,"name":"class prototype methods"},{"index":459,"name":"class static methods"},{"index":460,"name":"isn't writable, is configurable"}]},{"name":"String static methods","features":[{"index":461,"name":"String.raw"},{"index":462,"name":"String.fromCodePoint"}]},{"name":"String.prototype methods","features":[{"index":463,"name":"String.prototype.codePointAt"},{"index":464,"name":"String.prototype.normalize"},{"index":465,"name":"String.prototype.repeat"},{"index":466,"name":"String.prototype.startsWith"},{"index":467,"name":"String.prototype.startsWith throws on RegExp"},{"index":468,"name":"String.prototype.endsWith"},{"index":469,"name":"String.prototype.endsWith throws on RegExp"},{"index":470,"name":"String.prototype.includes"},{"index":471,"name":"String.prototype[Symbol.iterator]"},{"index":472,"name":"String iterator prototype chain"}]},{"name":"RegExp.prototype properties","features":[{"index":473,"name":"RegExp.prototype.flags"},{"index":474,"name":"RegExp.prototype[Symbol.match]"},{"index":475,"name":"RegExp.prototype[Symbol.replace]"},{"index":476,"name":"RegExp.prototype[Symbol.split]"},{"index":477,"name":"RegExp.prototype[Symbol.search]"},{"index":478,"name":"RegExp[Symbol.species]"}]},{"name":"Array static methods","features":[{"index":479,"name":"Array.from, array-like objects"},{"index":480,"name":"Array.from, generator instances"},{"index":481,"name":"Array.from, generic iterables"},{"index":482,"name":"Array.from, instances of generic iterables"},{"index":483,"name":"Array.from map function, array-like objects"},{"index":484,"name":"Array.from map function, generator instances"},{"index":485,"name":"Array.from map function, generic iterables"},{"index":486,"name":"Array.from map function, instances of iterables"},{"index":487,"name":"Array.from, iterator closing"},{"index":488,"name":"Array.of"},{"index":489,"name":"Array[Symbol.species]"}]},{"name":"Array.prototype methods","features":[{"index":490,"name":"Array.prototype.copyWithin"},{"index":491,"name":"Array.prototype.find"},{"index":492,"name":"Array.prototype.findIndex"},{"index":493,"name":"Array.prototype.fill"},{"index":494,"name":"Array.prototype.keys"},{"index":495,"name":"Array.prototype.values"},{"index":496,"name":"Array.prototype.entries"},{"index":497,"name":"Array.prototype[Symbol.iterator]"},{"index":498,"name":"Array iterator prototype chain"},{"index":499,"name":"Array.prototype[Symbol.unscopables]"}]},{"name":"Number properties","features":[{"index":500,"name":"Number.isFinite"},{"index":501,"name":"Number.isInteger"},{"index":502,"name":"Number.isSafeInteger"},{"index":503,"name":"Number.isNaN"},{"index":504,"name":"Number.EPSILON"},{"index":505,"name":"Number.MIN_SAFE_INTEGER"},{"index":506,"name":"Number.MAX_SAFE_INTEGER"}]},{"name":"Math methods","features":[{"index":507,"name":"Math.clz32"},{"index":508,"name":"Math.imul"},{"index":509,"name":"Math.sign"},{"index":510,"name":"Math.log10"},{"index":511,"name":"Math.log2"},{"index":512,"name":"Math.log1p"},{"index":513,"name":"Math.expm1"},{"index":514,"name":"Math.cosh"},{"index":515,"name":"Math.sinh"},{"index":516,"name":"Math.tanh"},{"index":517,"name":"Math.acosh"},{"index":518,"name":"Math.asinh"},{"index":519,"name":"Math.atanh"},{"index":520,"name":"Math.trunc"},{"index":521,"name":"Math.fround"},{"index":522,"name":"Math.cbrt"},{"index":523,"name":"Math.hypot"},{"index":524,"name":"Date.prototype[Symbol.toPrimitive]"}]}]}
{"_id":{"$oid":"5817a7a1b729347bfa533a18"},"name":"Misc","subcategories":[{"name":"prototype of bound functions","features":[{"index":556,"name":"basic functions"},{"index":557,"name":"generator functions"},{"index":558,"name":"arrow functions"},{"index":559,"name":"classes"},{"index":560,"name":"subclasses"}]},{"name":"Proxy, internal 'get' calls","features":[{"index":561,"name":"ToPrimitive"},{"index":562,"name":"CreateListFromArrayLike"},{"index":563,"name":"instanceof operator"},{"index":564,"name":"HasBinding"},{"index":565,"name":"CreateDynamicFunction"},{"index":566,"name":"ClassDefinitionEvaluation"},{"index":567,"name":"IteratorComplete, IteratorValue"},{"index":568,"name":"ToPropertyDescriptor"},{"index":569,"name":"Object.assign"},{"index":570,"name":"Object.defineProperties"},{"index":571,"name":"Function.prototype.bind"},{"index":572,"name":"Error.prototype.toString"},{"index":573,"name":"String.raw"},{"index":574,"name":"RegExp constructor"},{"index":575,"name":"RegExp.prototype.flags"},{"index":576,"name":"RegExp.prototype.test"},{"index":577,"name":"RegExp.prototype.toString"},{"index":578,"name":"RegExp.prototype[Symbol.match]"},{"index":579,"name":"RegExp.prototype[Symbol.replace]"},{"index":580,"name":"RegExp.prototype[Symbol.search]"},{"index":581,"name":"RegExp.prototype[Symbol.split]"},{"index":582,"name":"Array.from"},{"index":583,"name":"Array.prototype.concat"},{"index":584,"name":"Array.prototype iteration methods"},{"index":585,"name":"Array.prototype.pop"},{"index":586,"name":"Array.prototype.reverse"},{"index":587,"name":"Array.prototype.shift"},{"index":588,"name":"Array.prototype.splice"},{"index":589,"name":"Array.prototype.toString"},{"index":590,"name":"JSON.stringify"},{"index":591,"name":"Promise resolve functions"},{"index":592,"name":"String.prototype.match"},{"index":593,"name":"String.prototype.replace"},{"index":594,"name":"String.prototype.search"},{"index":595,"name":"String.prototype.split"},{"index":596,"name":"Date.prototype.toJSON"}]},{"name":"Proxy, internal 'set' calls","features":[{"index":597,"name":"Object.assign"},{"index":598,"name":"Array.from"},{"index":599,"name":"Array.of"},{"index":600,"name":"Array.prototype.copyWithin"},{"index":601,"name":"Array.prototype.fill"},{"index":602,"name":"Array.prototype.pop"},{"index":603,"name":"Array.prototype.push"},{"index":604,"name":"Array.prototype.reverse"},{"index":605,"name":"Array.prototype.shift"},{"index":606,"name":"Array.prototype.splice"},{"index":607,"name":"Array.prototype.unshift"}]},{"name":"Proxy, internal 'defineProperty' calls","features":[{"index":608,"name":"[[Set]]"},{"index":609,"name":"SetIntegrityLevel"}]},{"name":"Proxy, internal 'deleteProperty' calls","features":[{"index":610,"name":"Array.prototype.copyWithin"},{"index":611,"name":"Array.prototype.pop"},{"index":612,"name":"Array.prototype.reverse"},{"index":613,"name":"Array.prototype.shift"},{"index":614,"name":"Array.prototype.splice"},{"index":615,"name":"Array.prototype.unshift"}]},{"name":"Proxy, internal 'getOwnPropertyDescriptor' calls","features":[{"index":616,"name":"[[Set]]"},{"index":617,"name":"Object.assign"},{"index":618,"name":"Object.prototype.hasOwnProperty"},{"index":619,"name":"Function.prototype.bind"}]},{"name":"Proxy, internal 'ownKeys' calls","features":[{"index":620,"name":"SetIntegrityLevel"},{"index":621,"name":"TestIntegrityLevel"},{"index":622,"name":"SerializeJSONObject"}]},{"name":"Object static methods accept primitives","features":[{"index":623,"name":"Object.getPrototypeOf"},{"index":624,"name":"Object.getOwnPropertyDescriptor"},{"index":625,"name":"Object.getOwnPropertyNames"},{"index":626,"name":"Object.seal"},{"index":627,"name":"Object.freeze"},{"index":628,"name":"Object.preventExtensions"},{"index":629,"name":"Object.isSealed"},{"index":630,"name":"Object.isFrozen"},{"index":631,"name":"Object.isExtensible"},{"index":632,"name":"Object.keys"}]},{"name":"own property order","features":[{"index":633,"name":"Object.keys"},{"index":634,"name":"Object.getOwnPropertyNames"},{"index":635,"name":"Object.assign"},{"index":636,"name":"JSON.stringify"},{"index":637,"name":"JSON.parse"},{"index":638,"name":"Reflect.ownKeys, string key order"},{"index":639,"name":"Reflect.ownKeys, symbol key order"}]},{"name":"miscellaneous","features":[{"index":640,"name":"no escaped reserved words as identifiers"},{"index":641,"name":"duplicate property names in strict mode"},{"index":642,"name":"no semicolon needed after do-while"},{"index":643,"name":"no assignments allowed in for-in head in strict mode"},{"index":644,"name":"accessors aren't constructors"},{"index":645,"name":"Invalid Date"},{"index":646,"name":"RegExp constructor can alter flags"},{"index":647,"name":"RegExp.prototype.toString generic and uses \"flags\" property"},{"index":648,"name":"built-in prototypes are not instances"},{"index":649,"name":"function 'length' is configurabl"}]}]}
{"_id":{"$oid":"5817a7a1b729347bfa533a15"},"name":"Built-ins","subcategories":[{"name":"typed arrays","features":[{"index":233,"name":"Int8Array"},{"index":234,"name":"Uint8Array"},{"index":235,"name":"Uint8ClampedArray"},{"index":236,"name":"Int16Array"},{"index":237,"name":"Uint16Array"},{"index":238,"name":"Int32Array"},{"index":239,"name":"Uint32Array"},{"index":240,"name":"Float32Array"},{"index":241,"name":"Float64Array"},{"index":242,"name":"DataView (Int8)"},{"index":243,"name":"DataView (Uint8)"},{"index":244,"name":"DataView (Int16)"},{"index":245,"name":"DataView (Uint16)"},{"index":246,"name":"DataView (Int32)"},{"index":247,"name":"DataView (Uint32)"},{"index":248,"name":"DataView (Float32)"},{"index":249,"name":"DataView (Float64)"},{"index":250,"name":"ArrayBuffer[Symbol.species]"},{"index":251,"name":"constructors require new"},{"index":252,"name":"constructors accept generic iterables"},{"index":253,"name":"correct prototype chains"},{"index":254,"name":"%TypedArray%.from"},{"index":255,"name":"%TypedArray%.of"},{"index":256,"name":"%TypedArray%.prototype.subarray"},{"index":257,"name":"%TypedArray%.prototype.join"},{"index":258,"name":"%TypedArray%.prototype.indexOf"},{"index":259,"name":"%TypedArray%.prototype.lastIndexOf"},{"index":260,"name":"%TypedArray%.prototype.slice"},{"index":261,"name":"%TypedArray%.prototype.every"},{"index":262,"name":"%TypedArray%.prototype.filter"},{"index":263,"name":"%TypedArray%.prototype.forEach"},{"index":264,"name":"%TypedArray%.prototype.map"},{"index":265,"name":"%TypedArray%.prototype.reduce"},{"index":266,"name":"%TypedArray%.prototype.reduceRight"},{"index":267,"name":"%TypedArray%.prototype.reverse"},{"index":268,"name":"%TypedArray%.prototype.some"},{"index":269,"name":"%TypedArray%.prototype.sort"},{"index":270,"name":"%TypedArray%.prototype.copyWithin"},{"index":271,"name":"%TypedArray%.prototype.find"},{"index":272,"name":"%TypedArray%.prototype.findIndex"},{"index":273,"name":"%TypedArray%.prototype.fill"},{"index":274,"name":"%TypedArray%.prototype.keys"},{"index":275,"name":"%TypedArray%.prototype.values"},{"index":276,"name":"%TypedArray%.prototype.entries"},{"index":277,"name":"%TypedArray%.prototype[Symbol.iterator]"},{"index":278,"name":"%TypedArray%[Symbol.species]"}]},{"name":"Map","features":[{"index":279,"name":"basic functionality"},{"index":280,"name":"constructor arguments"},{"index":281,"name":"constructor requires new"},{"index":282,"name":"constructor accepts null"},{"index":283,"name":"constructor invokes set"},{"index":284,"name":"iterator closing"},{"index":285,"name":"Map.prototype.set returns this"},{"index":286,"name":"-0 key converts to +0"},{"index":287,"name":"Map.prototype.size"},{"index":288,"name":"Map.prototype.delete"},{"index":289,"name":"Map.prototype.clear"},{"index":290,"name":"Map.prototype.forEach"},{"index":291,"name":"Map.prototype.keys"},{"index":292,"name":"Map.prototype.values"},{"index":293,"name":"Map.prototype.entries"},{"index":294,"name":"Map.prototype[Symbol.iterator]"},{"index":295,"name":"Map.prototype isn't an instance"},{"index":296,"name":"Map iterator prototype chain"},{"index":297,"name":"Map[Symbol.species]"}]},{"name":"Set","features":[{"index":298,"name":"basic functionality"},{"index":299,"name":"constructor arguments"},{"index":300,"name":"constructor requires new"},{"index":301,"name":"constructor accepts null"},{"index":302,"name":"constructor invokes add"},{"index":303,"name":"iterator closing"},{"index":304,"name":"Set.prototype.add returns this"},{"index":305,"name":"-0 key converts to +0"},{"index":306,"name":"Set.prototype.size"},{"index":307,"name":"Set.prototype.delete"},{"index":308,"name":"Set.prototype.clear"},{"index":309,"name":"Set.prototype.forEach"},{"index":310,"name":"Set.prototype.keys"},{"index":311,"name":"Set.prototype.values"},{"index":312,"name":"Set.prototype.entries"},{"index":313,"name":"Set.prototype[Symbol.iterator]"},{"index":314,"name":"Set.prototype isn't an instance"},{"index":315,"name":"Set iterator prototype chain"},{"index":316,"name":"Set[Symbol.species]"}]},{"name":"WeakMap","features":[{"index":317,"name":"basic functionality"},{"index":318,"name":"constructor arguments"},{"index":319,"name":"constructor requires new"},{"index":320,"name":"constructor accepts null"},{"index":321,"name":"constructor invokes set"},{"index":322,"name":"frozen objects as keys"},{"index":323,"name":"iterator closing"},{"index":324,"name":"WeakMap.prototype.set returns this"},{"index":325,"name":"WeakMap.prototype.delete"},{"index":326,"name":"no WeakMap.prototype.clear method"},{"index":327,"name":".has, .get and .delete methods accept primitives"},{"index":328,"name":"WeakMap.prototype isn't an instance"}]},{"name":"WeakSet","features":[{"index":329,"name":"basic functionality"},{"index":330,"name":"constructor arguments"},{"index":331,"name":"constructor requires new"},{"index":332,"name":"constructor accepts null"},{"index":333,"name":"constructor invokes add"},{"index":334,"name":"iterator closing"},{"index":335,"name":"WeakSet.prototype.add returns this"},{"index":336,"name":"WeakSet.prototype.delete"},{"index":337,"name":"no WeakSet.prototype.clear method"},{"index":338,"name":".has and .delete methods accept primitives"},{"index":339,"name":"WeakSet.prototype isn't an instance"}]},{"name":"Proxy","features":[{"index":340,"name":"constructor requires new"},{"index":341,"name":"no \"prototype\" property"},{"index":342,"name":"\"get\" handler"},{"index":343,"name":"\"get\" handler, instances of proxies"},{"index":344,"name":"\"get\" handler invariants"},{"index":345,"name":"\"set\" handler"},{"index":346,"name":"\"set\" handler, instances of proxies"},{"index":347,"name":"\"set\" handler invariants"},{"index":348,"name":"\"has\" handler"},{"index":349,"name":"\"has\" handler, instances of proxies"},{"index":350,"name":"\"has\" handler invariants"},{"index":351,"name":"\"deleteProperty\" handler"},{"index":352,"name":"\"deleteProperty\" handler invariant"},{"index":353,"name":"\"getOwnPropertyDescriptor\" handler"},{"index":354,"name":"\"getOwnPropertyDescriptor\" handler invariants"},{"index":355,"name":"\"defineProperty\" handler"},{"index":356,"name":"\"defineProperty\" handler invariants"},{"index":357,"name":"\"getPrototypeOf\" handler"},{"index":358,"name":"\"getPrototypeOf\" handler invariant"},{"index":359,"name":"\"setPrototypeOf\" handler"},{"index":360,"name":"\"setPrototypeOf\" handler invariant"},{"index":361,"name":"\"isExtensible\" handler"},{"index":362,"name":"\"isExtensible\" handler invariant"},{"index":363,"name":"\"preventExtensions\" handler"},{"index":364,"name":"\"preventExtensions\" handler invariant"},{"index":365,"name":"\"ownKeys\" handler"},{"index":366,"name":"\"ownKeys\" handler invariant"},{"index":367,"name":"\"apply\" handler"},{"index":368,"name":"\"apply\" handler invariant"},{"index":369,"name":"\"construct\" handler"},{"index":370,"name":"\"construct\" handler invariants"},{"index":371,"name":"Proxy.revocable"},{"index":372,"name":"Array.isArray support"},{"index":373,"name":"JSON.stringify support"}]},{"name":"Reflect","features":[{"index":374,"name":"Reflect.get"},{"index":375,"name":"Reflect.set"},{"index":376,"name":"Reflect.has"},{"index":377,"name":"Reflect.deleteProperty"},{"index":378,"name":"Reflect.getOwnPropertyDescriptor"},{"index":379,"name":"Reflect.defineProperty"},{"index":380,"name":"Reflect.getPrototypeOf"},{"index":381,"name":"Reflect.setPrototypeOf"},{"index":382,"name":"Reflect.isExtensible"},{"index":383,"name":"Reflect.preventExtensions"},{"index":384,"name":"Reflect.ownKeys, string keys"},{"index":385,"name":"Reflect.ownKeys, symbol keys"},{"index":386,"name":"Reflect.apply"},{"index":387,"name":"Reflect.construct"},{"index":388,"name":"Reflect.construct sets new.target meta-property"},{"index":389,"name":"Reflect.construct creates instances from third argument"},{"index":390,"name":"Reflect.construct, Array subclassing"},{"index":391,"name":"Reflect.construct, RegExp subclassing"},{"index":392,"name":"Reflect.construct, Function subclassing"},{"index":393,"name":"Reflect.construct, Promise subclassing"}]},{"name":"Promise","features":[{"index":394,"name":"basic functionality"},{"index":395,"name":"constructor requires new"},{"index":396,"name":"Promise.prototype isn't an instance"},{"index":397,"name":"Promise.all"},{"index":398,"name":"Promise.all, generic iterables"},{"index":399,"name":"Promise.race"},{"index":400,"name":"Promise.race, generic iterables"},{"index":401,"name":"Promise[Symbol.species]"}]},{"name":"Symbol","features":[{"index":402,"name":"basic functionality"},{"index":403,"name":"typeof support"},{"index":404,"name":"symbol keys are hidden to pre-ES6 code"},{"index":405,"name":"Object.defineProperty support"},{"index":406,"name":"symbols inherit from Symbol.prototype"},{"index":407,"name":"cannot coerce to string or number"},{"index":408,"name":"can convert with String()"},{"index":409,"name":"new Symbol() throws"},{"index":410,"name":"Object(symbol)"},{"index":411,"name":"JSON.stringify ignores symbol primitives"},{"index":412,"name":"JSON.stringify ignores symbol objects"},{"index":413,"name":"global symbol registry"}]},{"name":"well-known symbols","features":[{"index":414,"name":"Symbol.hasInstance"},{"index":415,"name":"Symbol.isConcatSpreadable"},{"index":416,"name":"Symbol.iterator, existence"},{"index":417,"name":"Symbol.iterator, arguments object"},{"index":418,"name":"Symbol.species, existence"},{"index":419,"name":"Symbol.species, Array.prototype.concat"},{"index":420,"name":"Symbol.species, Array.prototype.filter"},{"index":421,"name":"Symbol.species, Array.prototype.map"},{"index":422,"name":"Symbol.species, Array.prototype.slice"},{"index":423,"name":"Symbol.species, Array.prototype.splice"},{"index":424,"name":"Symbol.species, RegExp.prototype[Symbol.split]"},{"index":425,"name":"Symbol.species, Promise.prototype.then"},{"index":426,"name":"Symbol.replace"},{"index":427,"name":"Symbol.search"},{"index":428,"name":"Symbol.split"},{"index":429,"name":"Symbol.match"},{"index":430,"name":"Symbol.match, RegExp constructor"},{"index":431,"name":"Symbol.match, String.prototype.startsWith"},{"index":432,"name":"Symbol.match, String.prototype.endsWith"},{"index":433,"name":"Symbol.match, String.prototype.includes"},{"index":434,"name":"Symbol.toPrimitive"},{"index":435,"name":"Symbol.toStringTag"},{"index":436,"name":"Symbol.toStringTag affects existing built-ins"},{"index":437,"name":"Symbol.toStringTag, new built-ins"},{"index":438,"name":"Symbol.toStringTag, misc. built-ins"},{"index":439,"name":"Symbol.unscopables"}]}]}

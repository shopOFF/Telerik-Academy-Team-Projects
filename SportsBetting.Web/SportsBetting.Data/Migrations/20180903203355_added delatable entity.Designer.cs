// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsBetting.Data;

namespace SportsBetting.Data.Migrations
{
    [DbContext(typeof(SportsBettingDbContext))]
    [Migration("20180903203355_added delatable entity")]
    partial class addeddelatableentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportsBetting.Data.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<int>("EventID");

                    b.Property<string>("EventName")
                        .HasMaxLength(300);

                    b.Property<DateTime>("EventStartDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEventPassed");

                    b.Property<double>("OddsForDraw");

                    b.Property<double>("OddsForFirstTeam");

                    b.Property<double>("OddsForSecondTeam");

                    b.HasKey("Id");

                    b.HasIndex("EventID")
                        .HasName("Index_EventID");

                    b.HasIndex("IsEventPassed")
                        .HasName("Index_IsEventPassed");

                    b.ToTable("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
